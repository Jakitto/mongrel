require 'rake'
require 'rake/testtask'
require 'rake/clean'
require 'rake/gempackagetask'
require 'rake/rdoctask'
require 'tools/rakehelp'
require 'tools/freebasic'
require 'fileutils'
include FileUtils

setup_tests
setup_clean ["pkg", "lib/*.bundle", "*.gem", ".config"]

setup_rdoc ['README', 'LICENSE', 'COPYING', 'lib/**/*.rb', 'doc/**/*.rdoc']

desc "Does a full compile, test run"
task :default => [:test, :compile, :package]

version="0.3.0"
name="mongrel_service"

setup_gem(name, version) do |spec|
  spec.summary = "Mongrel Native Win32 Service Plugin for Rails"
  spec.description = "This plugin offer native win32 services for rails, powered by Mongrel."
  spec.author="Luis Lavena"
  
  # added mongrel_service executable
  spec.executables = ["mongrel_service"]
  
  spec.add_dependency('gem_plugin', '>= 0.2.1')
  spec.add_dependency('mongrel', '>= 0.3.12.4')
  spec.add_dependency('win32-service', '>= 0.5.0')

  spec.files += Dir.glob("resources/**/*")
end


task :install => [:test, :package] do
  sh %{gem install pkg/#{name}-#{version}.gem}
end

task :uninstall => [:clean] do
  sh %{gem uninstall #{name}}
end

# too hackish, but get the job done, compile the ugly c code.
task :compile_c do
  sh %{cl /nologo /Zl /c native\\send_signal.cpp /Fonative\\send_signal.obj}
  sh %{lib /nologo native\\send_signal.obj /out:lib\\libsend_signal.a}
end
unless File.exist?("lib/libsend_signal.a")
  task :compile => :compile_c 
end

# ServiceFB namespace (lib)
namespace :lib do
  project_task 'servicefb' do
    lib       'ServiceFB'
    build_to  'lib'

    define    'SERVICEFB_DEBUG_LOG' if ENV['DEBUG_LIB']
    source    'lib/ServiceFB/ServiceFB.bas'
  end
  
  project_task 'servicefb_utils' do
    lib       'ServiceFB_Utils'
    build_to  'lib'

    define    'SERVICEFB_DEBUG_LOG' if ENV['DEBUG_LIB']
    source    'lib/ServiceFB/ServiceFB_Utils.bas'
  end
end
# add lib namespace to global tasks
#include_projects_of :lib
task :compile => "lib:build"

# mongrel_service (native)
namespace :native do
  project_task  'mongrel_service' do
    executable  'mongrel_service'
    build_to    'bin'
    
    main        'native/mongrel_service.bas'
    source      'native/process.bas'
    
    # including the precompiled file show warnings when linking with
    # ld, due special m$ directives in the obj file
    # will solve that later, when migrate the asm part of code to gcc
    # source      'native/send_signal.o'
    
    lib_path    'lib'
    library     'ServiceFB', 'ServiceFB_Utils'
    library     'send_signal'
    library     'user32', 'advapi32', 'psapi'
  end
end
#include_projects_of :native
task :compile => "native:build"
